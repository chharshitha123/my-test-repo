name: Display abc.txt Content on Push

on:
  push:
    branches:
      - main

jobs:
  display_content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read abc.txt
        id: read_abc
        run: |
          echo "ABC_CONTENT<<EOF" >> $GITHUB_ENV
          cat abc.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Call AI processing
        id: ai_process
        run: |
          API_ENDPOINT="https://openrouter.ai/api/v1/chat/completions"
          API_KEY="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"
          MODEL_NAME="google/gemma-3-27b-it:free"

          # Escape newlines and quotes for safe JSON input
          ESCAPED_CONTENT=$(jq -Rs <<< "$ABC_CONTENT")

          RESPONSE=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $API_KEY" \
            -d "{
              \"model\": \"$MODEL_NAME\",
              \"messages\": [
                {\"role\": \"user\", \"content\": $ESCAPED_CONTENT}
              ]
            }" \
            "$API_ENDPOINT")

          echo "Raw API Response: $RESPONSE"

          AI_RESPONSE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // .choices[0].text // empty')
          if [ -z "$AI_RESPONSE" ]; then
             AI_RESPONSE="No response from AI"
          fi

          echo "AI_RESPONSE=$AI_RESPONSE" >> $GITHUB_OUTPUT
        env:
          ABC_CONTENT: ${{ env.ABC_CONTENT }}
        outputs:
          AI_RESPONSE: ${{ steps.ai_process.outputs.AI_RESPONSE }}

      - name: Output AI response
        run: |
          echo "AI Response:"
          echo "${{ steps.ai_process.outputs.AI_RESPONSE }}"
